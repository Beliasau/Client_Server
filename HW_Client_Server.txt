HW
Client_Server
1) Прочиать про клиент-серверную архитектуру
2) Что такое HTTP и HTTPS
3) HTTP методы
4) HTTP статус коды сервера
5) Что такое ядро браузера 
6) Какие браузеры какие ядра используют
7) Что такое API
8. Что такое ендпоинты
9) URL (URI, URL, URN)
10) Идемпотентные HTTP методы
11) Безопасные HTTP методы
12) Идентификация, Аутентификация, Авторизация
13) Что такое IP
14) Что такое октаты в DNS
15) Что такое порт, сколько портов у Linux сервера
16) Уровни OSI
17) Хедеры http запросов

=============================================================


1)		Клиент-серверная архитектура

	Клиент (заказчик услуг) - программа или локальный компьютер, который отправляет на сервер запросы
 и получает от него ответы
	Сервер (поставщик услуг)- программа или локальный компьютер, который получает запрос от клиента
обрабатывает его и отправляет ответ обратно
	Клиент-серверная архитектура- архитектура в которой вычеслительная или сетевая нагрузка распределяется
 между клиентом и сервером
	Толстый клиент- клиент на котором происходит все вычеслительные процессы, сервер нужен только для 
сохранения основной информации(1С-бухгалтерия, онлайн игры)
	Тонкий клиент- все вычесления происходят на сервере(браузер)



2)		HTTP и HTTPS
	HTTP (hyper text transfer protocol)- протокол прикладного уровня для передачи данных (текстовой информации
или других данных зашифрованых в текстовом формате)
	HTTPS (HTTP Secure)- протокол для передачи конфиденциальной информации путем ее шифрования




3)		HTTP методы
Методы показывают какое желаемое действие выполнится для данног ресурса
	Методы бывают: безопасные, кэшируемые, идемпотентные
Безопасные- не меняют состояния сервера проводят операции, только чтение(все безопасные методы идемпотентны)
	GET. Head. Opnions
Кэшируемые- это ответы HTTP, которые могут быть сохранены для дальнейшего использования позже
Идемпотентные- методы при которых один и от же запрос имеет один итот же ответ, не меняя состояния сервера
	Методы:
GET- извлекает данные
Head- работает как и Get, но без тела ответа
Post- для отправки информации на сервер
Put- заменяет все текущие данные ресурса, данными запроса
Delete- удаляет указанный ресурс (информацию)
Options
Trace
Patch- частичное изменение ресурса



4)		HTTP статус коды сервера
Статус код- часть первой строке ответа от сервера при запросах по HTTP протоколу
1**		Информационные ()
100-199
2**		Успешные(Succes)
200-299
3**		Перенаправления(Redirection)
300-399
4**		Ошибка на стороне клиента(client error)
400-499
5**		Ошибка на стороне сервера(Server error)
500-599




5)		ядро браузера 
Браузер=оболочка + ядро
Оболочка- пользовательский интерфейс для настройки работы
Ядро(движок)- программа или модуль, отображает контент на основе языка разметки и выводит его на экран 





6) 		Какие браузеры какие ядра используют

	ядро Blink (от Google)
1 Chromium
2 Brave
3 Chrome
4 Comodo Dragon
5 Microsoft Edge
6 Epic Browser
7 Opera
8 SRWare Iron
9 Яндекс.Браузер
10 Амиго

	на движке Gecko (Mozilla)
1)Flock
2)K-Meleon
3)SeaMonkey
4)Camino
5)Mozilla Firefox
6)Waterfox

	Webkit (от Apple)
Apple Safari



7)		API
API(application programm interface) програмный интерфейс приложений
контракт по которому общаются между собой различные ПО, и определяет каким образом они будут общаться 
используя запросы и ответы 




8)		ендпоинты
Endpoint- точка приема запроса на стороне сервера(API)
Route(маршрут)- URL к которому можно обратится разными HTTP методами. Маршрут может иметь несколько эндпоинтов




9)		URL (URI, URL, URN)



10-11)		Смотри в №3



12)		 Идентификация, Аутентификация, Авторизация



13) 		Что такое IP



14) 		Что такое октаты в DNS



15)		 Что такое порт, сколько портов у Linux сервера



16) 		Уровни OSI



17)		 Хедеры http запросов

